name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  # test:
  #   name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       version:
  #         - '1.0'
  #         - '1.8'
  #         - 'nightly'
  #       os:
  #         - ubuntu-latest
  #       arch:
  #         - x64
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: ${{ matrix.version }}
  #         arch: ${{ matrix.arch }}
  #     - uses: julia-actions/cache@v1
  #     - uses: julia-actions/julia-buildpkg@v1
  #     - uses: julia-actions/julia-runtest@v1
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.7'
      - uses: julia-actions/cache@v1
      - name: Install dependencies
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.add([PackageSpec(url = "https://github.com/aaron-wheeler/VLLimitOrderBook.jl.git"), PackageSpec(url = "https://github.com/aaron-wheeler/Brokerage.jl.git")])
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=docs docs/make.jl
